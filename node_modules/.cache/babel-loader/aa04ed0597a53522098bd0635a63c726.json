{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chelomo\\\\react-exercise\\\\src\\\\App.js\";\n// בע\" ה\nimport React from 'react';\nimport Question from './Question';\nimport Button from '@material-ui/core/Button';\nconst questionsList = [{\n  questionId: 1,\n  questionText: 'Question 1',\n  answersOptions: ['1', '2', '3', '4'],\n  trueAnswer: \"1\"\n}, {\n  questionId: 2,\n  questionText: 'Question 2',\n  answersOptions: ['1', '2', '3', '4'],\n  trueAnswer: \"1\"\n}, {\n  questionId: 3,\n  questionText: 'QUestion 3',\n  answersOptions: ['1', '2', '3', '4'],\n  trueAnswer: \"1\"\n}, {\n  questionId: 4,\n  questionText: 'Question 4',\n  answersOptions: ['1', '2', '3', '4'],\n  trueAnswer: \"1\"\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.answerReturned = a => {\n      this.setState({\n        currentAnswer: a\n      });\n    };\n\n    this.onNext = () => {\n      // verify if true Answer has been chosen.\n      if (questionsList[this.state.currQuestion].trueAnswer === this.state.currentAnswer) {\n        this.setState({\n          currentScore: this.state.currentScore + 1\n        });\n      }\n\n      this.setState({\n        currQuestion: this.state.currQuestion + 1\n      }); // verify if it is the last question:\n\n      if (this.state.currQuestion === questionsList.length - 1) {\n        this.setState({\n          buttonNextText: \"Done\"\n        });\n      }\n    };\n\n    this.onPrev = () => {\n      this.setState({\n        currQuestion: this.state.currQuestion - 1\n      });\n    };\n\n    this.state = {\n      currQuestion: 0,\n      currentAnswer: \"\",\n      currentScore: 0,\n      buttonNextText: \"Next\"\n    };\n    this.answerReturned = this.answerReturned.bind(this);\n    this.onNext = this.onNext.bind(this);\n    this.onPrev = this.onPrev.bind(this);\n  }\n\n  render() {\n    // on The first question, The button prev disabled\n    if (this.state.currQuestion === 0) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Question, {\n        questionDetail: questionsList[this.state.currQuestion],\n        callbackReturnAnswer: this.answerReturned,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: true,\n        onClick: this.onPrev,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Prev\"), React.createElement(Button, {\n        onClick: this.onNext,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.buttonNextText));\n    } else if (this.state.currQuestion < questionsList.length) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Question, {\n        questionDetail: questionsList[this.state.currQuestion],\n        callbackReturnAnswer: this.answerReturned,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onPrev,\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Prev\"), React.createElement(Button, {\n        onClick: this.onNext,\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.buttonNextText));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Congratulations ! You answered on \", this.state.currentScore, \"  true questions.\");\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\chelomo\\react-exercise\\src\\App.js"],"names":["React","Question","Button","questionsList","questionId","questionText","answersOptions","trueAnswer","App","Component","constructor","props","answerReturned","a","setState","currentAnswer","onNext","state","currQuestion","currentScore","length","buttonNextText","onPrev","bind","render"],"mappings":"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","sourcesContent":["// בע\" ה\nimport React from 'react';\nimport Question from './Question';\nimport Button from '@material-ui/core/Button';\n\nconst questionsList = [\n  {\n    questionId: 1,\n    questionText: 'Question 1',\n    answersOptions: ['1', '2', '3', '4'],\n    trueAnswer: \"1\"\n  },\n  {\n    questionId: 2,\n    questionText: 'Question 2',\n    answersOptions: ['1', '2', '3', '4'],\n    trueAnswer: \"1\"\n  },\n  {\n    questionId: 3,\n    questionText: 'QUestion 3',\n    answersOptions: ['1', '2', '3', '4'],\n    trueAnswer: \"1\"\n  },\n  {\n    questionId: 4,\n    questionText: 'Question 4',\n    answersOptions: ['1', '2', '3', '4'],\n    trueAnswer: \"1\"\n  },\n];\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currQuestion: 0,\n      currentAnswer: \"\",\n      currentScore: 0,\n      buttonNextText: \"Next\"\n    }\n\n    this.answerReturned = this.answerReturned.bind(this);\n    this.onNext = this.onNext.bind(this);\n    this.onPrev = this.onPrev.bind(this);\n\n  }\n\n  answerReturned = a => {\n    this.setState({ currentAnswer: a });\n  };\n\n  onNext = () => {\n    // verify if true Answer has been chosen.\n    if (questionsList[this.state.currQuestion].trueAnswer === this.state.currentAnswer) {\n      this.setState({ currentScore: this.state.currentScore + 1 });\n    }\n    this.setState({ currQuestion: this.state.currQuestion + 1 })\n\n    // verify if it is the last question:\n    if (this.state.currQuestion === questionsList.length - 1) {\n      this.setState({ buttonNextText: \"Done\" })\n    }\n\n  }\n\n  onPrev = () => {\n    this.setState({ currQuestion: this.state.currQuestion - 1 })\n\n  }\n\n\n  render() {\n\n    // on The first question, The button prev disabled\n    if (this.state.currQuestion === 0) {\n      return (\n        <div className=\"App\">\n\n          <Question questionDetail={questionsList[this.state.currQuestion]} callbackReturnAnswer={this.answerReturned}></Question>\n\n          <Button disabled={true} onClick={this.onPrev} variant=\"contained\" color=\"secondary\" >\n            Prev\n    </Button>\n\n          <Button onClick={this.onNext} variant=\"contained\" color=\"primary\" >\n            {this.state.buttonNextText}\n          </Button>\n\n        </div>\n\n\n      );\n    }\n\n    else if (this.state.currQuestion < questionsList.length) {\n      return (\n        <div className=\"App\">\n\n          <Question questionDetail={questionsList[this.state.currQuestion]} callbackReturnAnswer={this.answerReturned}></Question>\n\n          <Button onClick={this.onPrev} variant=\"contained\" color=\"secondary\" >\n            Prev\n      </Button>\n\n          <Button onClick={this.onNext} variant=\"contained\" color=\"primary\" >\n            {this.state.buttonNextText}\n          </Button>\n\n        </div>\n      );\n    }\n    else {\n      return (\n        <div>\n          Congratulations ! You answered on {this.state.currentScore}  true questions.\n        </div>\n      );\n    }\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}